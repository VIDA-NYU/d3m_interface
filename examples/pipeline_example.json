{
  "id": "63e4ac6c-87b5-414f-aff4-a76190ffa908",
  "name": "63e4ac6c-87b5-414f-aff4-a76190ffa908",
  "description": "AlphaZero (data_preprocessing.tfidf_vectorizer.SKlearn, classification.gradient_boosting.SKlearn)",
  "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
  "created": "2020-10-07T22:54:03Z",
  "context": "TESTING",
  "inputs": [
    {
      "name": "input dataset"
    }
  ],
  "outputs": [
    {
      "data": "steps.12.produce",
      "name": "predictions"
    }
  ],
  "steps": [
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
        "version": "0.2.0",
        "name": "Denormalize datasets",
        "python_path": "d3m.primitives.data_transformation.denormalize.Common",
        "digest": "bdcabfa0a37d0793473959bf8ea27050c1c83500fb725f900568570066b67cb3"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "inputs.0"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
        "version": "0.3.0",
        "name": "Extract a DataFrame from a Dataset",
        "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
        "digest": "3f8e05cacbf2e118298b1e49c5db726b27bd669cbe33ddbea4fc62292ba759bc"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.0.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "0b21fcca-8b35-457d-a65d-36294c6f80a2",
        "version": "0.1.0",
        "name": "Columns text reader",
        "python_path": "d3m.primitives.data_preprocessing.text_reader.Common",
        "digest": "04dabcca12935bc695839d1864cc4d9c5aaa4df2dfa65fad5f41a5afcd4ec1a1"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.1.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "return_result": {
          "type": "VALUE",
          "data": "replace"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d7e14b12-abeb-42d8-942f-bdb077b4fd37",
        "version": "0.1.0",
        "name": "Add semantic types to columns",
        "python_path": "d3m.primitives.data_transformation.add_semantic_types.Common",
        "digest": "e2c8ffd8e973d79acdd08b770f09121c51c8b41d4b3ef2e101a6ca5ee8f77ebd"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.2.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "columns": {
          "type": "VALUE",
          "data": [
            1
          ]
        },
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/TrueTarget"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d7e14b12-abeb-42d8-942f-bdb077b4fd37",
        "version": "0.1.0",
        "name": "Add semantic types to columns",
        "python_path": "d3m.primitives.data_transformation.add_semantic_types.Common",
        "digest": "e2c8ffd8e973d79acdd08b770f09121c51c8b41d4b3ef2e101a6ca5ee8f77ebd"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.3.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "columns": {
          "type": "VALUE",
          "data": [
            1
          ]
        },
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "http://schema.org/Boolean"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d7e14b12-abeb-42d8-942f-bdb077b4fd37",
        "version": "0.1.0",
        "name": "Add semantic types to columns",
        "python_path": "d3m.primitives.data_transformation.add_semantic_types.Common",
        "digest": "e2c8ffd8e973d79acdd08b770f09121c51c8b41d4b3ef2e101a6ca5ee8f77ebd"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.4.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "columns": {
          "type": "VALUE",
          "data": [
            2
          ]
        },
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "http://schema.org/Text"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d7e14b12-abeb-42d8-942f-bdb077b4fd37",
        "version": "0.1.0",
        "name": "Add semantic types to columns",
        "python_path": "d3m.primitives.data_transformation.add_semantic_types.Common",
        "digest": "e2c8ffd8e973d79acdd08b770f09121c51c8b41d4b3ef2e101a6ca5ee8f77ebd"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.5.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "columns": {
          "type": "VALUE",
          "data": [
            2
          ]
        },
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/Attribute"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
        "version": "0.6.0",
        "name": "Parses strings into their types",
        "python_path": "d3m.primitives.data_transformation.column_parser.Common",
        "digest": "dff2ff7c7b648bc37e79ddf772cad768242a66356bd1449fab322195fd03d1d4"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.6.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.4.0",
        "name": "Extracts columns by semantic type",
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
        "digest": "104d2b49f1564c66ae06579d99a99990c7694110e13f7df5679cc0bc6b21257a"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.7.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/Attribute"
          ]
        },
        "exclude_columns": {
          "type": "VALUE",
          "data": []
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "name": "sklearn.feature_extraction.text.TfidfVectorizer",
        "python_path": "d3m.primitives.data_preprocessing.tfidf_vectorizer.SKlearn",
        "version": "2020.6.24",
        "id": "1f7ce2c7-1ec8-3483-9a65-eedd4b5811d6",
        "digest": "b43056cc4a0d85d261299dd1ae05a3bed363135ba159178661390c1f5b7b18ca"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.8.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "use_semantic_types": {
          "type": "VALUE",
          "data": true
        },
        "return_result": {
          "type": "VALUE",
          "data": "replace"
        },
        "stop_words": {
          "type": "VALUE",
          "data": {
            "case": "string",
            "value": "english"
          }
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
        "version": "0.4.0",
        "name": "Extracts columns by semantic type",
        "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
        "digest": "104d2b49f1564c66ae06579d99a99990c7694110e13f7df5679cc0bc6b21257a"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.6.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "semantic_types": {
          "type": "VALUE",
          "data": [
            "https://metadata.datadrivendiscovery.org/types/TrueTarget"
          ]
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "name": "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier",
        "python_path": "d3m.primitives.classification.gradient_boosting.SKlearn",
        "version": "2020.6.24",
        "id": "01d2c086-91bf-3ca5-b023-5139cf239c77",
        "digest": "48fbdf2c4f30eb26f27d1fc591fb7a9c8564627486009498ae266ee15a5a26e9"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.9.produce"
        },
        "outputs": {
          "type": "CONTAINER",
          "data": "steps.10.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        },
        {
          "id": "produce_feature_importances"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "8d38b340-f83f-4877-baaa-162f8e551736",
        "version": "0.3.0",
        "name": "Construct pipeline predictions output",
        "python_path": "d3m.primitives.data_transformation.construct_predictions.Common",
        "digest": "bad40fe6fc7c899c1f188a43a5fedeabb4a65f14bcc03da2ac20d8ad8e2202f9"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.11.produce"
        },
        "reference": {
          "type": "CONTAINER",
          "data": "steps.6.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    }
  ]
}